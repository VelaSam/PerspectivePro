@startuml


skinparam backgroundColor #EEEBDC

legend top left
 |= Color  |= Package |
 |<back:#a2c5eb>   </back>| Modele |
 |<back:#42b883>   </back>| Vue |
 |<back:#dea2eb>   </back>| Controleur |
 |<back:#FEFFA5>   </back>| Observer |
 |<back:#F5B0CB>   </back>| Commande |
 endlegend




    '----------OBSERVER--------------'
    interface Observer #FEFFA5{
        +update(args)
    }

    interface Subject #FEFFA5{
        -observers: Observer[]
        -mainState

        +attachObserver(o: Observer)
        +detachObserver(o: Observer)
        +notifySubscribers()

    }
    '-----------OBSERVER--------------'



    '-----------COMMAND--------------'
    interface Commande #F5B0CB {
        +execute()
    }

    class CommandTranslate #F5B0CB implements Commande{
        +execute()
   
    }

    class CommandZoomIn #F5B0CB implements Commande{
        +execute()
   
    }

    class CommandZoomOut #F5B0CB implements Commande{
        +execute()
   
    }

    class CommandUndo #F5B0CB implements Commande{
        +execute()
    }
    
    class CommandSauvegarder #F5B0CB implements Commande{
        +execute()
    }

    class CommandCharger #F5B0CB implements Commande{
        +execute()
    }
    
    '-----------COMMAND--------------'


    '-----------SINGLETON--------------'


    class GestionnaireCommande #dea2eb{
        -instance: GestionnaireCommande
        -pileDeCommande: Stack<Commande>
        

        -GestionnaireCommande()
        + {static} getInstance(): GestionnaireCommande


    } 
    '-----------SINGLETON--------------'


    class ModeleSingleton #a2c5eb {
        -instance: ModeleSingleton

        -ModeleSingleton()
        + {static} getInstance(): ModeleSingleton;
    }


    class ModeleVignette{}

    class Perspective #a2c5eb implements Subject{

    }

    class Image #a2c5eb implements Subject{

        -path: String
    }

    class Controleur #dea2eb{

        -command: Commande

        +setCommand(c: Commande)
        +executeCommand()

    }


    Controleur -> GestionnaireCommande : utilise


    GestionnaireCommande o-- Commande

    class Vue #42b883 implements Observer {}




    Subject o-- Observer

    ModeleSingleton o-l- Perspective
    ModeleSingleton o-l- Image

    ModeleSingleton <-- Controleur: modifie
    Vue -up- Controleur

    Vue <-- ModeleSingleton: avertit
    Vue --> ModeleSingleton: lit les parametres

    Commande ----> ModeleSingleton : execute

@enduml

Command = Invoker
Perspective = Panel

Chaque panneau va chercher du modele 
les informations de sa perspective respective

L'image implémente Subject car durant lexecution
lutilisateur doit pouvoir changer l'image quand qu'il veut

Perspective implémente Subject pour actualiser le tout lors 
des Commandes 